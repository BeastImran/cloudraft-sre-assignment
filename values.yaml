# Default values for metrics-app
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: ghcr.io/cloudraftio/metrics-app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Security context defaults
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 3000
  fsGroup: 2000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  privileged: false

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Pod annotations
podAnnotations:
  seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'

# Pod security policies
podSecurityPolicy:
  enabled: true

# Secret configuration
secrets:
  # Secret data will be stored in a Kubernetes Secret
  mypassword:
    # The actual password will be configured through ArgoCD
    key: MYPASSWORD
    value: "" # Will be overwritten by ArgoCD

# Configure probes
probes:
  liveness:
    path: /counter
    port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readiness:
    path: /counter
    port: http
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  startup:
    path: /counter
    port: http
    failureThreshold: 30
    periodSeconds: 10

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

# Specify the endpoint to expose
endpoint: /counter

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Additional security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Content-Security-Policy: default-src 'self'";
  hosts:
  - host: metrics.example.com
    paths:
    - path: /
      pathType: Prefix
  tls:
  - secretName: metrics-tls
    hosts:
    - metrics.example.com

# Gradual rollout configuration
rollout:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 30
  revisionHistoryLimit: 5

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Pod network policies
networkPolicy:
  enabled: true
  # Allow incoming traffic only from specific sources
  ingressFrom:
  - podSelector:
      matchLabels:
        app.kubernetes.io/component: ingress-controller
    namespaceSelector:
      matchLabels:
        kubernetes.io/metadata.name: ingress-nginx
  # Limit outbound traffic
  egressTo:
  - namespaceSelector:
      matchLabels:
        kubernetes.io/metadata.name: kube-system

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - metrics-app
        topologyKey: kubernetes.io/hostname
